# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: package
on:
  workflow_call: # Makes workflow reusable
    inputs:
      nuget-dir:
        required: true
        type: string

env:
  # Source: https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-environment-variables#dotnet_skip_first_time_experience
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  # Source: https://learn.microsoft.com/en-us/dotnet/core/tools/telemetry#disclosure
  DOTNET_NOLOGO: true

defaults:
  run:
    shell: pwsh

jobs:

  create_nuget:
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        run: |
          echo "nuget dir: ${{ inputs.nuget-dir }}"

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Get all history to allow automatic versioning using MinVer

      # Install the .NET SDK indicated in the global.json file
      - name: Setup .NET
        uses: actions/setup-dotnet@v3

      # Create the NuGet package in the folder from the environment variable NuGetDirectory
      - run: dotnet pack --configuration Release --output ${{ inputs.nuget-dir }}

      # Publish the NuGet package as an artifact, so they can be used in the following jobs
      - uses: actions/upload-artifact@v3
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ inputs.nuget-dir }}/*.nupkg

  validate_nuget:
    runs-on: ubuntu-latest
    needs: [ create_nuget ]
    steps:
      # Install the .NET SDK indicated in the global.json file
      - name: Setup .NET
        uses: actions/setup-dotnet@v3

      # Download the NuGet package created in the previous job
      - uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ inputs.nuget-dir }}

      - name: Install nuget validator
        run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global

      # Validate metadata and content of the NuGet package
      # https://www.nuget.org/packages/Meziantou.Framework.NuGetPackageValidation.Tool#readme-body-tab
      # If some rules are not applicable, you can disable them
      # using the --excluded-rules or --excluded-rule-ids option
      - name: Validate package
        run: meziantou.validate-nuget-package (Get-ChildItem "${{ inputs.nuget-dir }}/*.nupkg") --excluded-rule-ids 101
